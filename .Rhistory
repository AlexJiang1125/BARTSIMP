for (para_id in 1:20) {
#load(paste0('tests_m5_seed_4_data_waz_para_id_',para_id,'_m5k5.RData'))
load(paste0('tests_m5_seed_',seedid,'_data_hwz_para_id_',para_id,'_m5k2.RData'))
#load(paste0('tests_m5_seed_2_data_hwz_para_id_',para_id,'.RData'))
resp.field.sbart <- c(resp.field.sbart, res$resp.field)
}
load(paste0('barttest2_m5_seed_5_data_hwz_long_m5k2.RData'))
sigmas.sbart[[seedid]] <- mod11$sigma[1501:2500]
}
sigmas.sbart <- unlist(sigmas.sbart)
sigmas.bart <- list()
for (seedid in 1:8) {
for (para_id in 1:20) {
#load(paste0('tests_m5_seed_4_data_waz_para_id_',para_id,'_m5k5.RData'))
load(paste0('tests_m5_seed_',seedid,'_data_hwz_para_id_',para_id,'_bart_m5k2.RData'))
#load(paste0('tests_m5_seed_2_data_hwz_para_id_',para_id,'.RData'))
resp.field.bart <- c(resp.field.bart, res$resp.field)
}
load(paste0('barttest2_m5_seed_5_data_hwz_bart_m5k2.RData'))
sigmas.bart[[seedid]] <- mod11$sigma[1501:2500]
}
sigmas.bart <- unlist(sigmas.bart)
## bart
# resp.field.bart <- list()
# for (para_id in 1:20) {
#   #load(paste0('bart_test_m5_seed_2_data_hwz_para_id_',para_id,'_bart.RData'))
#   #load(paste0('bart_test_m5_seed_4_data_waz_para_id_',para_id,'_bart.RData'))
#   load(paste0('bart_test_m5_seed_5_data_hwz_para_id_',para_id,'_bart.RData'))
#   resp.field.bart <- c(resp.field.bart, res$resp.field)
# }
# load(paste0('barttest2_m5_seed_5_data_hwz_bart.RData'))
# sigmas.bart <- mod11$sigma[1501:2500]
## spde 0
resp.field.spde0 <- list()
load(paste0('spde0_test_m5_seed_hwz.RData'))
resp.field.spde0 <- res$resp.field
sigmas.spde0 <- res$sigmas
## spde
resp.field.spde <- list()
load(paste0('spde_test_m5_seed_hwz.RData'))
sigmas.spde <- res$sigmas
resp.field.spde <- res$resp.field
## load in data
dat_hwz_train_unique <- read.csv("dat_hwz_train_unique.csv")[,-1]
dat_waz_train_unique <- read.csv("dat_waz_train_unique.csv")[,-1]
dat_hwz_train_unique <- read.csv("dat_hwz_train_unique.csv")[,-1]
dat_hwz_out_train <- read.csv("dat_hwz_out_train.csv")[,-1]
dat_waz_out_train <- read.csv("dat_waz_out_train.csv")[,-1]
dat_hwz_out_train <- read.csv("dat_hwz_out_train.csv")[,-1]
dat_waz_test_unique <- read.csv("dat_waz_test_unique.csv")[,-1]
dat_waz_test_unique <- read.csv("dat_waz_test_unique.csv")[,-1]
dat_waz_test_unique <- read.csv("dat_waz_test_unique.csv")[,-1]
waz_severe <- which(dat_waz_test_unique$waz_mean < -1.5)
hwz_severe <- which(dat_waz_test_unique$waz_mean < -1.5)
hwz_severe <- which(dat_waz_test_unique$waz_mean < -1)
} else {
data_dir <- "/Users/alexziyujiang/Dropbox/data/SBART/Kenya_covariates/data"
setwd(data_dir)
resp.field.sbart <- list()
## sbart
for (para_id in 1:15) {
#load(paste0('tests_m5_seed_4_data_waz_para_id_',para_id,'.RData'))
load(paste0('tests_m5_seed_1_data_waz_para_id_',para_id,'_slices_',slices,'.RData'))
#load(paste0('tests_m5_seed_2_data_hwz_para_id_',para_id,'.RData'))
resp.field.sbart <- c(resp.field.sbart, res$resp.field)
}
load(paste0('barttest2_m5_seed_1_data_waz_slice_1.RData'))
sigmas.sbart <- mod11$sigma[751:1500]
## bart
resp.field.bart <- list()
for (para_id in 1:15) {
#load(paste0('bart_test_m5_seed_2_data_hwz_para_id_',para_id,'_bart.RData'))
#load(paste0('bart_test_m5_seed_4_data_waz_para_id_',para_id,'_bart.RData'))
load(paste0('bart_test_m5_seed_1_data_waz_para_id_',para_id,'_slices_',slices,'_bart.RData'))
resp.field.bart <- c(resp.field.bart, res$resp.field)
}
load(paste0('barttest2_m5_seed_1_data_waz_slice_1_bart.RData'))
sigmas.bart <- mod11$sigma[751:1500]
## spde 0
# resp.field.spde0 <- list()
# load(paste0('spde0_test_m5_seed_hwz.RData'))
# resp.field.spde0 <- res$resp.field
# sigmas.spde0 <- res$sigmas
## spde
resp.field.spde <- list()
load(paste0('spde_test_m5_seed_1_slices_',slices,'.RData'))
sigmas.spde <- res$sigmas
resp.field.spde <- res$resp.field
## load in data
dat_hwz_train_unique <- read.csv(paste0("slices_",slices,"/dat_hwz_train_unique.csv"))[,-1]
dat_waz_train_unique <- read.csv(paste0("slices_",slices,"/dat_waz_train_unique.csv"))[,-1]
dat_hwz_train_unique <- read.csv(paste0("slices_",slices,"/dat_hwz_train_unique.csv"))[,-1]
dat_hwz_out_train <- read.csv(paste0("slices_",slices,"/dat_hwz_out_train.csv"))[,-1]
dat_waz_out_train <- read.csv(paste0("slices_",slices,"/dat_waz_out_train.csv"))[,-1]
dat_hwz_out_train <- read.csv(paste0("slices_",slices,"/dat_hwz_out_train.csv"))[,-1]
dat_waz_test_unique <- read.csv(paste0("slices_",slices,"/dat_waz_test_unique.csv"))[,-1]
dat_waz_test_unique <- read.csv(paste0("slices_",slices,"/dat_waz_test_unique.csv"))[,-1]
dat_waz_test_unique <- read.csv(paste0("slices_",slices,"/dat_waz_test_unique.csv"))[,-1]
}
## posterior mean on the testing dataset
resp.field.mat.sbart <- matrix(unlist(resp.field.sbart), ncol = 750, nrow = length(resp.field.sbart[[1]]))
resp.field.mat.bart <- matrix(unlist(resp.field.bart), ncol = 750, nrow = length(resp.field.bart[[1]]))
#resp.field.mat.spde0 <- matrix(unlist(resp.field.spde0), ncol = 750, nrow = length(resp.field.spde0[[1]]))
resp.field.mat.spde <- matrix(unlist(resp.field.spde), ncol = 750, nrow = length(resp.field.spde[[1]]))
#dim(resp.field.mat.bart)
sbart.mean <- apply(resp.field.mat.sbart, FUN = "median", MARGIN = 1)
bart.mean <- apply(resp.field.mat.bart, FUN = "median", MARGIN = 1)
#spde0.mean <- apply(resp.field.mat.spde0, FUN = "median", MARGIN = 1)
spde.mean <- apply(resp.field.mat.spde, FUN = "median", MARGIN = 1)
for (i in 1:750) {
resp.field.mat.spde[,i] <-  rnorm(length(resp.field.mat.spde[,i]), resp.field.mat.spde[,i], sd= sigmas.spde[i]/sqrt(dat_waz_test_unique$size))
#resp.field.mat.spde0[,i] <-  rnorm(length(resp.field.mat.spde0[,i]), resp.field.mat.spde0[,i], sd= sigmas.spde0[i]/sqrt(dat_waz_test_unique$size))
}
for (i in 1:750) {
resp.field.mat.sbart[,i] <-  rnorm(length(resp.field.mat.sbart[,i]), resp.field.mat.sbart[,i], sd= sigmas.sbart[i]/sqrt(dat_waz_test_unique$size))
resp.field.mat.bart[,i] <-  rnorm(length(resp.field.mat.bart[,i]), resp.field.mat.bart[,i], sd= sigmas.bart[i]/sqrt(dat_waz_test_unique$size))
}
#resp.field.mat.spde0.bd <- apply(resp.field.mat.spde0, FUN = "quantile", probs = c(0.05, 0.95), MARGIN = 1)
resp.field.mat.spde.bd <- apply(resp.field.mat.spde, FUN = "quantile", probs = c(0.05, 0.95), MARGIN = 1)
resp.field.mat.sbart.bd <- apply(resp.field.mat.sbart, FUN = "quantile", probs = c(0.05, 0.95), MARGIN = 1)
resp.field.mat.bart.bd <- apply(resp.field.mat.bart, FUN = "quantile", probs = c(0.05, 0.95), MARGIN = 1)
cvg.sbart <- mean((resp.field.mat.sbart.bd[2,] - dat_waz_test_unique$waz_mean > 0) * (resp.field.mat.sbart.bd[1,] - dat_waz_test_unique$waz_mean < 0))
cvg.bart  <- mean((resp.field.mat.bart.bd[2,] - dat_waz_test_unique$waz_mean > 0) * (resp.field.mat.bart.bd[1,] - dat_waz_test_unique$waz_mean < 0))
cvg.spde  <- mean((resp.field.mat.spde.bd[2,] - dat_waz_test_unique$waz_mean > 0) * (resp.field.mat.spde.bd[1,] - dat_waz_test_unique$waz_mean < 0))
#cvg.spde0 <- mean((resp.field.mat.spde0.bd[2,] - dat_waz_test_unique$waz_mean > 0) * (resp.field.mat.spde0.bd[1,] - dat_waz_test_unique$waz_mean < 0))
cvg <- c(cvg.sbart,
cvg.bart,
#cvg.spde0,
cvg.spde
)
mse.sbart <- sqrt(mean((dat_waz_test_unique$waz_mean - sbart.mean)^2))
mse.bart  <- sqrt(mean((dat_waz_test_unique$waz_mean - bart.mean)^2))
#mse.spde0 <- sqrt(mean((dat_waz_test_unique$waz_mean[hwz_severe] - spde0.mean[hwz_severe])^2))
mse.spde  <- sqrt(mean((dat_waz_test_unique$waz_mean - spde.mean)^2))
mse <- c(
mse.sbart,
mse.bart,
#mse.spde0,
mse.spde
)
bias.sbart <- -(mean((dat_waz_test_unique$waz_mean - sbart.mean)))
bias.bart  <- -(mean((dat_waz_test_unique$waz_mean - bart.mean)))
#bias.spde0 <- -(mean((dat_waz_test_unique$waz_mean - spde0.mean)))
bias.spde  <- -(mean((dat_waz_test_unique$waz_mean - spde.mean)))
bias <- c(
bias.sbart,
bias.bart,
#bias.spde0,
bias.spde
)
waz_result <- data.frame(
cvg = cvg,
mse = mse,
bias = bias
)
waz_result$model <- c("sbart","bart",  "spde")
waz_result$data <- "waz"
write.csv(waz_result, file = paste0("results_slices_",slices,".csv"))
}
dat_surface <- read.csv("surf_admin2.csv")[, -1]
dat_surface
slices = 1
# evaluating spde + cov model results
rm(list = ls())
data_dir <- "/Users/alexziyujiang/Dropbox/data/SBART/Kenya_covariates/data"
setwd(data_dir)
library(ggplot2)
library(tidyr)
library(dplyr)
library(gridExtra)
library(ggpubr)
theme_set(theme_bw())
fittree <- function(x, trs) {
if (is.na(x[1])) {
return(NA)
} else {
m <- length(trs)
res <- 0
for (i in 1:m) {
tr <- trs[[i]]
rowid <- id <- 1
left <- 2*id
while (left %in% tr$nodeid) {
# print(tr$splitvarid[rowid])
if (x[1+tr$splitvarid[rowid]] <= tr$varcutval[rowid]) {
id <- 2*id
} else {
id <- 2*id + 1
}
rowid <- which(tr$nodeid == id)
#print(tr$nodeval[rowid])
left <- 2*id
}
res <- res + tr$nodeval[rowid]
}
return(res)
}
}
fitlines <- function(x, tree, nstart = 25, nend = 51) {
temp <- rep(0, length(x))
for (j in nstart:nend) {
for (i in 1:length(x)) {
temp[i] <- temp[i] + fittree(x[i], treetemp[[j]])
}
}
return(temp/(nend-nstart+1))
}
for (slices in 1:5) {
dat_out <- read.csv(paste0("slices_",slices,"/dat_waz_out_train.csv"))[, -1]
dat_unique <- read.csv(paste0("slices_",slices,"/dat_waz_train_unique.csv"))[, -1]
load(paste0("barttest2_m5_seed_1_data_waz_slice_",slices,".RData"))
dat_surface <- read.csv("surf_admin2.csv")[, -1]
dat_surface_raster <- rasterFromXYZ(dat_surface)
dat_surface_spdf <- as(dat_surface_raster, 'SpatialGridDataFrame')
# extract the dim used to generate lattice grids
xymin <- dat_surface_spdf@grid@cellcentre.offset
xymax <- dat_surface_spdf@grid@cellcentre.offset + dat_surface_spdf@grid@cellsize*(dat_surface_spdf@grid@cells.dim-1)
dims <- dat_surface_spdf@grid@cells.dim
buff <- 0
# get extreme spatial points in the datasets
xmin <- min(dat_unique$s1_train) - buff
xmax <- max(dat_unique$s1_train) + buff
ymin <- min(dat_unique$s2_train) - buff
ymax <- max(dat_unique$s2_train) + buff
avg_lth <- (ymax - ymin + xmax - xmin)*0.5
loc_unique <- dat_unique[,c("s1_train","s2_train")]
mymesh <- inla.mesh.2d(
loc.domain= data.frame(loc_unique) ,
max.edge=c(.1, .2)*avg_lth, cutoff=0.05*avg_lth)
sigma_0 <- 0.55
alpha_1 <- 0.5
rho_0 <- 2.4
alpha_2 <- 0.5
nu <- 5
lambda <- 0.1
myspde <- inla.spde2.pcmatern(mesh = mymesh,
prior.range = c(rho_0,alpha_2),
prior.sigma = c(sigma_0,alpha_1))
spat.field <- list()#matrix(0,grid_size,grid_size)
resp.field <- list()#matrix(0,grid_size,grid_size)
cov.field <- list()#rep(0, grid_size^2)
coords_grid2 <- SpatialPoints(dat_surface_spdf) %>% as.data.frame()
dat_surface_xcov <- dat_surface[,c("pop_den", "tavg", "light", "ndvi",
"prec", "access")]
# load the data
stacked <- inla.stack(
data=list(y=dat_out$y),
effects=list(
i=1:myspde$n.spde,
df=data.frame(x0 = 1,dat_out[,c("pop_den", "tavg", "light", "ndvi",
"prec", "access")])
),
A=list(inla.spde.make.A(mymesh, as.matrix(cbind(dat_out$s1, dat_out$s2))),1))
myspde <- inla.spde2.pcmatern(
mesh = mymesh,
prior.range = c(rho_0, alpha_2),
prior.sigma = c(sigma_0 , alpha_1)
)
hyper = list(hyper = list(prec = list(
prior = "loggamma",
param = c(nu / 2, lambda * nu / 2)
)))
result <- inla(
y ~ -1 + x0 + pop_den + tavg + light + ndvi + prec + access + f(i, model = myspde),
control.compute = list(dic = FALSE, mlik = TRUE, config =TRUE),
control.family = hyper,
data = inla.stack.data(stacked, hyper = "hyper"),
control.predictor = list(A = inla.stack.A(stacked), compute = TRUE))
samples = inla.posterior.sample(750, result = result)
xnames <- rownames(samples[[1]]$latent)
idx <-
lapply(c("x0", "pop_den", "tavg", "light", "ndvi",
"prec", "access", 'i'), function(nam)
which(substr(xnames, 1, nchar(nam)) == nam))
mat.samples <-
sapply(samples, function(spl)
c(x0 =  spl$latent[idx[[1]]],
pop_den =  spl$latent[idx[[2]]],
tavg    =  spl$latent[idx[[3]]],
light   =  spl$latent[idx[[4]]],
ndvi    =  spl$latent[idx[[5]]],
prec    =  spl$latent[idx[[6]]],
access  =  spl$latent[idx[[7]]],
i       =  spl$latent[idx[[8]]]))
A_pred <- inla.spde.make.A(mesh = mymesh,
loc = as.matrix(dat_surface[, c("x", "y")]))
eta.samples <-
cbind(
x0 = rep(1,length(dat_surface_xcov$pop_den)),
pop_den = dat_surface_xcov$pop_den,
tavg = dat_surface_xcov$tavg,
light = dat_surface_xcov$light,
ndvi = dat_surface_xcov$ndvi,
prec = dat_surface_xcov$prec,
access = dat_surface_xcov$access,
i = as.matrix(A_pred)
) %*% mat.samples
for (i in 1:750) {
resp.field[[i]] <- eta.samples[,i] %>% as.vector()
}
mat.samples2 <-
sapply(samples, function(spl)
c(x0 =  spl$latent[idx[[1]]],
pop_den =  spl$latent[idx[[2]]],
tavg    =  spl$latent[idx[[3]]],
light   =  spl$latent[idx[[4]]],
ndvi    =  spl$latent[idx[[5]]],
prec    =  spl$latent[idx[[6]]],
access  =  spl$latent[idx[[7]]]))
eta.samples2 <-
cbind(
x0 = rep(1,length(dat_surface_xcov$pop_den)),
pop_den = dat_surface_xcov$pop_den,
tavg = dat_surface_xcov$tavg,
light = dat_surface_xcov$light,
ndvi = dat_surface_xcov$ndvi,
prec = dat_surface_xcov$prec,
access = dat_surface_xcov$access
) %*% mat.samples2
mat.samples3 <-
sapply(samples, function(spl)
c(i       =  spl$latent[idx[[8]]]))
eta.samples3 <-
cbind(
i = as.matrix(A_pred)
) %*% mat.samples3
sigmas <- NA
for (i in 1:750) {
sigmas[i] <- 1/sqrt(samples[[i]]$hyperpar[1])
}
for (i in 1:750) {
cov.field[[i]] <- eta.samples2[,i] %>% as.vector()
}
for (i in 1:750) {
spat.field[[i]] <- eta.samples3[,i] %>% as.vector()
}
res <- list(
resp.field = resp.field,
cov.field = cov.field,
spat.field = spat.field,
sigmas = sigmas
)
save(res, file = paste0("field_spde_test_m5_seed_1_slices_",slices,".RData"))
}
data_dir <- "/Users/alexziyujiang/Dropbox/CSE 512"
setwd(data_dir)
sunshine <- read.csv("sunshine.csv")
View(sunshine)
library(ggplot2)
library(dplyr)
View(sunshine)
ggplot(sunshine) %>% geom_point(aes(x = month, y = sunshine), col = city)
ggplot(sunshine) %>% geom_point(aes(x = month, y = sunshine), col = city)
ggplot(sunshine) %>% geom_point(aes(x = month, y = sunshine), color = city)
ggplot(sunshine) %>% geom_point(aes(x = month, y = sunshine, color = city))
ggplot(sunshine) + geom_point(aes(x = month, y = sunshine, color = city))
ggplot(sunshine) + geom_point(aes(x = month, y = sunshine, color = city)) + ylim(c(0, 350))
sunshine$month <- as.factor(sunshine$month, level = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
sunshine$month <- as.factor(sunshine$month, levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
sunshine$month <- factor(sunshine$month, levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
ggplot(sunshine) + geom_point(aes(x = month, y = sunshine, color = city)) + ylim(c(0, 350))
ggplot(sunshine) + geom_line(aes(x = month, y = sunshine, color = city)) + ylim(c(0, 350))
ggplot(sunshine) + geom_line(aes(x = month, y = sunshine, group = city, color = city)) + ylim(c(0, 350))
ggplot(sunshine) + geom_line(aes(x = month, y = sunshine, group = city, color = city)) +
geom_point(aes(x = month, y = sunshine, group = city, color = city)) + ylim(c(0, 350))
sunshine$avg <- sunshine %>% group_by(city) %>% summarise(sunshine_mean = mean(sunshine))
sunshine %>% group_by(city) %>% summarise(sunshine_mean = mean(sunshine))
sunshine <- read.csv("sunshine.csv")
sunshine$avg <- sunshine %>% group_by(month) %>% summarise(sunshine_mean = mean(sunshine))
sunshine %>% group_by(month) %>% summarise(sunshine_mean = mean(sunshine))
sunshine
sunshine %>% group_by(month) %>% summarise(sunshine_mean = mean(sunshine))
sunshine_avg <- data.frame(
month = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"),
temp_avg = sunshine %>% group_by(month) %>% summarise(sunshine_mean = mean(sunshine))
)
sunshine_avg
ggplot(sunshine) + geom_point(aes(x = month, y = sunshine, group = city, color = city)) + ylim(c(0, 350)) +
geom_line(data = sunshine_avg, aes(x = month, y = temp_avg))
ggplot(sunshine) + geom_point(aes(x = month, y = sunshine, group = city, color = city)) + ylim(c(0, 350)) +
geom_line(data = sunshine_avg, aes(x = sunshine_avg$month, y = sunshine_avg$temp_avg))
ggplot(sunshine) + geom_point(aes(x = month, y = sunshine, group = city, color = city)) + ylim(c(0, 350)) +
geom_line(data = sunshine_avg, aes(x = month, y = temp_avg))
sunshine_avg <- data.frame(
month = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"),
temp_avg = sunshine %>% group_by(month) %>% summarise(sunshine_mean = mean(sunshine))
)
sunshine_avg
as.vector(sunshine %>% group_by(month) %>% summarise(sunshine_mean = mean(sunshine))
()
)
as.vector(sunshine %>% group_by(month) %>% summarise(sunshine_mean = mean(sunshine))
)
sunshine_avg <- data.frame(
month = c("Apr", "Aug", "Dec", "Feb", "Jan", "Jul", "Jun", "Mar", "May", "Nov", "Oct", "Sep"),
temp_avg = as.vector(sunshine %>% group_by(month) %>% summarise(sunshine_mean = mean(sunshine)))
)
sunshine$month <- factor(sunshine$month, levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
ggplot(sunshine) + geom_point(aes(x = month, y = sunshine, group = city, color = city)) + ylim(c(0, 350)) +
geom_line(data = sunshine_avg, aes(x = month, y = temp_avg))
sunshine_avg
as.vector(sunshine %>% group_by(month) %>% summarise(sunshine_mean = mean(sunshine)))
sunshine_avg <- data.frame(
month = c("Apr", "Aug", "Dec", "Feb", "Jan", "Jul", "Jun", "Mar", "May", "Nov", "Oct", "Sep"),
temp_avg = as.vector(sunshine %>% group_by(month) %>% summarise(sunshine_mean = mean(sunshine)))[,2]
)
sunshine_avg
ggplot(sunshine) + geom_point(aes(x = month, y = sunshine, group = city, color = city)) + ylim(c(0, 350)) +
geom_line(data = sunshine_avg, aes(x = month, y = sunshine_mean))
sunshine_avg
ggplot(sunshine) + geom_point(aes(x = month, y = sunshine, group = city, color = city)) + ylim(c(0, 350)) +
geom_line(data = sunshine_avg, aes(x = month, y = sunshine_mean))
ggplot(sunshine) + geom_point(aes(x = month, y = sunshine, group = city, color = city)) + ylim(c(0, 350)) +
geom_line(data = sunshine_avg, aes(x = sunshine_avg$month, y = sunshine_avg$sunshine_mean))
sunshine_avg
ggplot(sunshine) + geom_point(aes(x = month, y = sunshine, group = city, color = city)) + ylim(c(0, 350)) +
geom_line(data = sunshine_avg, aes(x = month, y = sunshine_mean))
sunshine_avg
ggplot(sunshine) + geom_point(aes(x = month, y = sunshine, group = city, color = city)) + ylim(c(0, 350)) +
geom_line(data = sunshine_avg, aes(x = month, y = sunshine_mean))
geom_line(data = sunshine_avg, aes(x = month, y = sunshine_mean))
ggplot(sunshine) + geom_point(aes(x = month, y = sunshine, group = city, color = city)) + ylim(c(0, 350)) +
geom_line(data = sunshine_avg, aes(x = month, y = sunshine_mean))
ggplot(sunshine) + geom_point(aes(x = month, y = sunshine, color = city)) + ylim(c(0, 350)) +
geom_line(data = sunshine_avg, aes(x = month, y = sunshine_mean))
sunshine_avg$month <- factor(sunshine_avg$month, levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
sunshine$month <- factor(sunshine$month, levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
ggplot(sunshine) + geom_point(aes(x = month, y = sunshine, color = city)) + ylim(c(0, 350)) +
geom_line(data = sunshine_avg, aes(x = month, y = sunshine_mean))
sunshine_avg
ggplot(sunshine) + geom_point(aes(x = month, y = sunshine, color = city)) + ylim(c(0, 350)) +
geom_line(data = sunshine_avg, aes(x = month, y = sunshine_mean, group = city))
ggplot(sunshine) + geom_point(aes(x = month, y = sunshine, color = city)) + ylim(c(0, 350)) +
geom_line(data = sunshine_avg, aes(x = month, y = sunshine_mean, group = 1))
sunshine_avg$month <- factor(sunshine_avg$month, levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
sunshine_avg$month
ggplot(sunshine) + geom_point(aes(x = month, y = sunshine, color = city)) + ylim(c(0, 350)) +
geom_line(data = sunshine_avg, aes(x = month, y = sunshine_mean, group = 1))
sunshine <- read.csv("sunshine.csv")
sunshine_avg <- data.frame(
month = c("Apr", "Aug", "Dec", "Feb", "Jan", "Jul", "Jun", "Mar", "May", "Nov", "Oct", "Sep"),
temp_avg = as.vector(sunshine %>% group_by(month) %>% summarise(sunshine_mean = mean(sunshine)))[,2]
)
sunshine_avg
sunshine <- read.csv("sunshine.csv")
sunshine_avg <- data.frame(
month = c("Apr", "Aug", "Dec", "Feb", "Jan", "Jul", "Jun", "Mar", "May", "Nov", "Oct", "Sep"),
temp_avg = as.vector(sunshine %>% group_by(month) %>% summarise(sunshine_mean = mean(sunshine)))[,2]
)
sunshine_avg$month <- factor(sunshine_avg$month, levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
sunshine$month <- factor(sunshine$month, levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
ggplot(sunshine) + geom_point(aes(x = month, y = sunshine, color = city)) + ylim(c(0, 350)) +
geom_line(data = sunshine_avg, aes(x = month, y = sunshine_mean, group = 1))
ggplot(sunshine) + geom_point(aes(x = month, y = sunshine, color = city)) + ylim(c(0, 350)) +
geom_line(data = sunshine_avg, aes(x = month, y = sunshine_mean, group = 1)) + title("How does the average sunshine over the six cities change over the whole year?") +
ylab("hours of sunshine per month")
ggplot(sunshine) + geom_point(aes(x = month, y = sunshine, color = city)) + ylim(c(0, 350)) +
geom_line(data = sunshine_avg, aes(x = month, y = sunshine_mean, group = 1)) + title("How does the average sunshine over the six cities change over the whole year?") +
ylab("hours of sunshine per month")
ggplot(sunshine) + geom_point(aes(x = month, y = sunshine, color = city)) + ylim(c(0, 350)) +
geom_line(data = sunshine_avg, aes(x = month, y = sunshine_mean, group = 1)) + title("How does the average sunshine over the six cities change over the whole year?") +
ylab("hours of sunshine per month")
ggplot(sunshine) + geom_point(aes(x = month, y = sunshine, color = city)) + ylim(c(0, 350)) +
geom_line(data = sunshine_avg, aes(x = month, y = sunshine_mean, group = 1)) + title("How does the average sunshine over the six cities change over the whole year?") +
ylab("hours of sunshine per month")
ggplot(sunshine) + geom_point(aes(x = month, y = sunshine, color = city)) + ylim(c(0, 350)) +
geom_line(data = sunshine_avg, aes(x = month, y = sunshine_mean, group = 1)) + ggtitle("How does the average sunshine over the six cities change over the whole year?") +
ylab("hours of sunshine per month")
ggplot(sunshine) + geom_point(aes(x = month, y = sunshine, color = city)) + ylim(c(0, 350)) +
geom_line(data = sunshine_avg, aes(x = month, y = sunshine_mean, group = 1)) + ggtitle("How does the average sunshine over the six cities change in the year?") +
ylab("hours of sunshine per month")
library(ggplot2)
library(dplyr)
data_dir <- "/Users/alexziyujiang/Dropbox/CSE 512"
setwd(data_dir)
sunshine <- read.csv("sunshine.csv")
sunshine_avg <- data.frame(
month = c("Apr", "Aug", "Dec", "Feb", "Jan", "Jul", "Jun", "Mar", "May", "Nov", "Oct", "Sep"),
temp_avg = as.vector(sunshine %>% group_by(month) %>% summarise(sunshine_mean = mean(sunshine)))[,2]
)
sunshine_avg$month <- factor(sunshine_avg$month, levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
sunshine$month <- factor(sunshine$month, levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
ggplot(sunshine) + geom_point(aes(x = month, y = sunshine, color = city)) + ylim(c(0, 350)) +
geom_line(data = sunshine_avg, aes(x = month, y = sunshine_mean, group = 1)) + ggtitle("How does the average sunshine over the six cities change in the year?") +
ylab("hours of sunshine per month")
ggplot(sunshine) + geom_point(aes(x = month, y = sunshine, color = city)) + ylim(c(0, 350)) +
geom_line(data = sunshine_avg, aes(x = month, y = sunshine_mean, group = 1)) + ggtitle("How does the average sunshine over the six cities change in the year?") +
ylab("hours of sunshine per month")
data_dir <- "/Users/alexziyujiang/Dropbox/CSE 512"
setwd(data_dir)
sunshine <- read.csv("sunshine.csv")
sunshine_avg <- data.frame(
month = c("Apr", "Aug", "Dec", "Feb", "Jan", "Jul", "Jun", "Mar", "May", "Nov", "Oct", "Sep"),
temp_avg = as.vector(sunshine %>% group_by(month) %>% summarise(sunshine_mean = mean(sunshine)))[,2]
)
sunshine_avg$month <- factor(sunshine_avg$month, levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
sunshine$month <- factor(sunshine$month, levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
ggplot(sunshine) + geom_point(aes(x = month, y = sunshine, color = city)) + ylim(c(0, 350)) +
geom_line(data = sunshine_avg, aes(x = month, y = sunshine_mean, group = 1)) + ggtitle("How does the average sunshine over the six cities change in the year?") +
ylab("hours of sunshine per month")
pkgbuild::check_build_tools(debug = TRUE)
pkgbuild::check_build_tools(debug = TRUE)
pkgbuild::check_build_tools(debug = TRUE)
pkgbuild::check_build_tools(debug = TRUE)
pkgbuild::check_build_tools(debug = TRUE)
pkgbuild::check_build_tools(debug = TRUE)
pkgbuild::check_build_tools(debug = TRUE)
/bin/sh: gcc-11.4.0
Sys.getenv("BINPREF")
Sys.getenv("PATH")
pkgbuild::check_build_tools(debug = TRUE)
library(BARTSIMP)
